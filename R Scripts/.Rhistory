environment(newdata)
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Add extra columns to create quadratic model
tab$Interaction<-tab$Oil*tab$Filler
tab$OilSquared<-tab$Oil^2
tab$FillerSquared<-tab$Filler^2
# Fit the model as a linear model
model.fit<-lm(tab$Visc ~ tab$Oil + tab$Filler + tab$Interaction + tab$OilSquared + tab$FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
data<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
con<-predict(model.fit, newdata=data, interval="confidence")
con
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = -3)
predict(lm(y ~ x), new, se.fit = TRUE)
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
model.fit
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Add extra columns to create quadratic model
tab$Interaction<-tab$Oil*tab$Filler
tab$OilSquared<-tab$Oil^2
tab$FillerSquared<-tab$Filler^2
# Fit the model as a linear model
model.fit<-lm(tab$Visc ~ tab$Oil + tab$Filler + tab$Interaction + tab$OilSquared + tab$FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
tab$Oil=10,
tab$Filler=50,
tab$Interaction = 500,
tab$OilSquared = 100,
tab$FillerSquared = 2500
)
# Find the confidence interval
con<-predict(model.fit, newdata, interval="confidence")
con
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = -3)
predict(lm(y ~ x), new, se.fit = TRUE)
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Add extra columns to create quadratic model
Visc<-tab$Visc
Oil<-tab$Oil
Filler<-tab$Filler
Interaction<-tab$Oil*tab$Filler
OilSquared<-tab$Oil^2
FillerSquared<-tab$Filler^2
# Fit the model as a linear model
#model.fit<-lm(tab$Visc ~ tab$Oil + tab$Filler + tab$Interaction + tab$OilSquared + tab$FillerSquared)
model.fit<-lm(Visc ~ Oil + Filler + Interaction + OilSquared + FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
con<-predict(model.fit, newdata, interval="confidence")
con
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = -3)
predict(lm(y ~ x), new, se.fit = TRUE)
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
# Delete previous variables
rm(list=ls())
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Add extra columns to create quadratic model
Visc<-tab$Visc
Oil<-tab$Oil
Filler<-tab$Filler
Interaction<-tab$Oil*tab$Filler
OilSquared<-tab$Oil^2
FillerSquared<-tab$Filler^2
# Fit the model as a linear model
#model.fit<-lm(tab$Visc ~ tab$Oil + tab$Filler + tab$Interaction + tab$OilSquared + tab$FillerSquared)
model.fit<-lm(Visc ~ Oil + Filler + Interaction + OilSquared + FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
con<-predict(model.fit, newdata, interval="confidence")
con
# Delete previous variables
rm(list=ls())
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Store variables from table
Visc<-tab$Visc
Oil<-tab$Oil
Filler<-tab$Filler
Interaction<-tab$Oil*tab$Filler
OilSquared<-tab$Oil^2
FillerSquared<-tab$Filler^2
# Fit the model as a quadratic model
model.fit<-lm(Visc ~ Oil + Filler + Interaction + OilSquared + FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
con<-predict(model.fit, newdata, interval="confidence", level=0.95)
con
# Delete previous variables
rm(list=ls())
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Store variables from table
Visc<-tab$Visc
Oil<-tab$Oil
Filler<-tab$Filler
Interaction<-tab$Oil*tab$Filler
OilSquared<-tab$Oil^2
FillerSquared<-tab$Filler^2
# Fit the model as a quadratic model
model.fit<-lm(Visc ~ Oil + Filler + Interaction + OilSquared + FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
ci<-predict(model.fit, newdata, interval="confidence", level=0.95)
ci
# Find the predicition interval
pi<-predict(model.fit, newdata, interval="prediction", level=0.95)
pi
# Delete previous variables
rm(list=ls())
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Store variables from table
Visc<-tab$Visc
Oil<-tab$Oil
Filler<-tab$Filler
Interaction<-tab$Oil*tab$Filler
OilSquared<-tab$Oil^2
FillerSquared<-tab$Filler^2
# Fit the model as a quadratic model
model.fit<-lm(Visc ~ Oil + Filler + Interaction + OilSquared + FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
ci<-predict(model.fit, newdata, interval="confidence", level=0.95)
ci
# Find the predicition interval
pi<-predict(model.fit, newdata, interval="prediction", level=0.975)
pi
# Delete previous variables
rm(list=ls())
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Store variables from table
Visc<-tab$Visc
Oil<-tab$Oil
Filler<-tab$Filler
Interaction<-tab$Oil*tab$Filler
OilSquared<-tab$Oil^2
FillerSquared<-tab$Filler^2
# Fit the model as a quadratic model
model.fit<-lm(Visc ~ Oil + Filler + Interaction + OilSquared + FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
ci<-predict(model.fit, newdata, interval="confidence", level=0.975)
ci
# Find the predicition interval
pi<-predict(model.fit, newdata, interval="prediction", level=0.975)
pi
# Delete previous variables
rm(list=ls())
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Store variables from table
Visc<-tab$Visc
Oil<-tab$Oil
Filler<-tab$Filler
Interaction<-tab$Oil*tab$Filler
OilSquared<-tab$Oil^2
FillerSquared<-tab$Filler^2
# Fit the model as a quadratic model
model.fit<-lm(Visc ~ Oil + Filler + Interaction + OilSquared + FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
ci<-predict(model.fit, newdata, interval="confidence", level=0.95)
ci
# Find the predicition interval
pi<-predict(model.fit, newdata, interval="prediction", level=0.95)
pi
# Set working directory
setwd("C:/Projects/Statistics/MATH38141Coursework/R Scripts")
getwd()
# Set working directory
dir<-getwd()
pi
# Set working directory
dir<-getwd()
if(!is.null(dir)) setwd(dir)
dir
# Set working directory
dir<-getwd()
if(!is.null(dir)) setwd(dir) else stop("Working directory is incorrect!")
# Set working directory
dir<-getwd()
dir<-""
if(!is.null(dir)) setwd(dir) else stop("Working directory is incorrect!")
# Set working directory
dir<-getwd()
dir<-NULL
if(!is.null(dir)) setwd(dir) else stop("Working directory is incorrect!")
# Set working directory
dir<-getwd()
if(!is.null(dir)) setwd(dir) else stop("Working directory is incorrect")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Create X matrix
X<-cbind(
rep(1, time = nrow(tab)),
tab$Oil,
tab$Filler,
tab$Oil*tab$Filler
)
# Get/store transpose of X
XT<-t(X)
# Get value of n
n<-nrow(X)
# Times transpose by X
prod<-XT %*% X
# Find the inverse of prod
invProd<-solve(prod)
# Create y response vector
y<-tab$Visc
# Calculate beta vector
beta<-invProd%*%XT%*%y
# Calculate SSE
SSE<-t(y)%*%y-t(beta)%*%XT%*%y
# Calculate estimate of variance
var<-SSE/(nrow(X) - ncol(X))
# Calculate the SST
SST<-t(y)%*%y
# Calculate mean of y
my = mean(y)
# Calculate value of SST_C
SST_C<-SST-n*(my^2)
# Calculate coefficient of regression
R<-(SST_C-SSE)/SST_C
# Get diagonal of (X^TX)^-1
dia<-diag(invProd)
# Get values of test statistics
ts<-beta/(sqrt(var)[1]*sqrt(dia))
# Set working directory
dir<-getwd()
if(!is.null(dir)) setwd(dir) else stop("Working directory is incorrect")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Fit the model as a linear model
model.fit<-lm(tab$Visc ~ tab$Oil + tab$Filler + I(tab$Oil*tab$Filler))
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[4]
var
# Set working directory
dir<-getwd()
if(!is.null(dir)) setwd(dir) else stop("Working directory is incorrect")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Create X matrix
X<-cbind(
rep(1, time = nrow(tab)),
tab$Oil,
tab$Filler,
tab$Oil*tab$Filler,
tab$Oil^2,
tab$Filler^2
)
# Get/store transpose of X
XT<-t(X)
# Get value of n
n<-nrow(X)
# Times transpose by X
prod<-XT %*% X
# Find the inverse of prod
invProd<-solve(prod)
# Create y response vector
y<-tab$Visc
# Get value of X^Ty
XTy<-XT%*%y
# Calculate beta vector
beta<-invProd%*%XTy
# Calculate SSE
SSE<-t(y)%*%y-t(beta)%*%XT%*%y
# Calculate estimate of variance
var<-SSE/(nrow(X) - ncol(X))
# Calculate the SST
SST<-t(y)%*%y
# Calculate mean of y
my = mean(y)
# Calculate value of SST_C
SST_C<-SST-n*(my^2)
# Calculate coefficient of regression
R<-(SST_C-SSE)/SST_C
# Get diagonal of (X^TX)^-1
dia<-diag(invProd)
# Get values of test statistics
ts<-beta/(sqrt(var)[1]*sqrt(dia))
# Store guessed values from chemist
f_0=c(1, 10, 50, 500, 100, 2500)
# Calculate f_0%*%beta
ciMean<-f_0%*%beta
# Calculate f_0(X^TX)^-1f_0
ciP<-f_0%*%invProd%*%f_0
# 97.5% t distro
ciT<-2.110
# Calculate CI +-
ciPM<-ciT*var*sqrt(ciP)
# Calculate confidence interval as 2 vec
ci<-c(ciMean-ciPM, ciMean+ciPM)
# Calculate PI +-
piPM<-ciT*var*sqrt(1+ciP)
# Calculate predicition interval as 2 vec
pi<-c(ciMean-piPM, ciMean+piPM)
library(ggplot2)
library(plotly)
graph <- plot_ly(tab, x = ~Oil, y = ~Filler, z = ~Visc) %>%
add_markers()
#add_trace(x = px, y = py, z = pz, name = 'trace 1', mode = 'lines+markers')
graph
# Delete previous variables
rm(list=ls())
# Set working directory
dir<-getwd()
if(!is.null(dir)) setwd(dir) else stop("Working directory is incorrect")
# Load data as a table
tab<-read.table("Viscos.txt", header = TRUE)
# Store variables from table
Visc<-tab$Visc
Oil<-tab$Oil
Filler<-tab$Filler
Interaction<-tab$Oil*tab$Filler
OilSquared<-tab$Oil^2
FillerSquared<-tab$Filler^2
# Fit the model as a quadratic model
model.fit<-lm(Visc ~ Oil + Filler + Interaction + OilSquared + FillerSquared)
# Get summary of model
summa<-summary(model.fit)
summa
# Get anova of model
anov<-anova(model.fit)
anov
# Find variance of response
var<-anov[]$`Mean Sq`[6]
var
newdata<-data.frame(
Oil=10,
Filler=50,
Interaction = 500,
OilSquared = 100,
FillerSquared = 2500
)
# Find the confidence interval
ci<-predict(model.fit, newdata, interval="confidence", level=0.95)
ci
# Find the predicition interval
pi<-predict(model.fit, newdata, interval="prediction", level=0.95)
pi
